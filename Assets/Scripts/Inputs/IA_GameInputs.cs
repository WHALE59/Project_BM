//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.1
//     from Assets/Scripts/Inputs/IA_GameInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace BM
{
    public partial class @IA_GameInputs: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @IA_GameInputs()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""IA_GameInputs"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""c6bf7282-05b2-4662-8f4e-bc8ca0308e69"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""3d7b0b2e-6e43-4af0-bfde-4639a02e1ae0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""aad726e6-956f-4f15-9b04-25448593dde9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""023bab3f-7aa5-4b0d-b1cf-bdc02a9e5954"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Walk"",
                    ""type"": ""Button"",
                    ""id"": ""33c591bc-2824-4d5a-a8e2-71f227d54358"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CollectOrActivate"",
                    ""type"": ""Button"",
                    ""id"": ""66d78be4-afe2-44cb-ad34-b860ad6035f0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""3757b1d8-c107-496c-909e-18fd54473f48"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleDeveloperOverlay"",
                    ""type"": ""Button"",
                    ""id"": ""f4903ca1-2b06-4ab3-a436-6bddec4866e1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open_Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""0a09ccdd-564b-4715-9b3b-351d28f60081"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD"",
                    ""id"": ""be740651-9f0a-465f-8034-be7b5751f669"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""278fcc04-d881-49b5-9818-d053e8a8a6f7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""45dd505c-46fc-4f64-a4a7-dfbaea18b1fe"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""67d4b04f-64ef-4740-bafb-c5ac3270b873"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""229fa768-347a-451a-ba72-8881a70d4b36"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""34c7a7d8-50b0-4f58-939a-a7d7ffa4263a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3909a5b8-8112-4562-8eae-ad6682a68243"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0770698f-49b3-4d69-ac7b-788a5eee4d62"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cd92b382-ccb1-41e6-8111-2b66e55ce0a7"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""05eb023f-799d-45b7-b2a7-e6aaa85d2660"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7a1508cd-fb02-4acf-b961-d58406ab51d8"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e4070dc8-c3fe-4cbc-b96a-6a123c8a2b81"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""987259e4-a7c5-479e-991e-28b2f98227cc"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8f991a5f-04f5-4cc1-bd90-299e92897b5a"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""321f3042-cbd1-47f8-92a7-b229102633c7"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""05b89f0e-be26-43c8-be89-c5f2490b295a"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""40062ff5-a8a2-43f8-bacc-e34fc6acc3a4"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""0ae8512c-cca7-4fc7-9f54-3824433ea64a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cedb0ac0-5191-4048-a945-d33815bd65ef"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dfe0e4b1-a973-4ec7-8bb6-b96147109a28"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aebe6a4f-a3ca-447a-8ffa-d1a84f7a417a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""94da83b4-b271-47d7-81dd-83113af3bb31"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""226b472b-1ba4-418a-a7d1-d3b075f2a567"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""845ac320-a788-4888-9dc3-259668fb8f8e"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c9bfdc9-8203-4689-a783-97012bdc13d7"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""BM_PC"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77680fe1-6143-41b8-9b67-b02e378f51e8"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""ToggleDeveloperOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08706aa6-1c9f-4e24-bebc-ea03d327b5c7"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""CollectOrActivate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d80c78e6-febb-45ba-87fb-162b168c3471"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5574281b-3474-4273-bf74-84d21cc6d69a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Open_Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gameplay_UI"",
            ""id"": ""958cb14d-5ef2-4af2-9d37-4a1f346ef7ee"",
            ""actions"": [
                {
                    ""name"": ""Close_Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""b602609b-f072-4a82-93d2-5fe9d4552d6e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next_Page"",
                    ""type"": ""Button"",
                    ""id"": ""147d87b0-7f6c-4cd4-8a93-20db64f99708"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Previous_Page"",
                    ""type"": ""Button"",
                    ""id"": ""0bbb8e57-c169-42b2-9b13-9dd0619894e0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click_Left"",
                    ""type"": ""Button"",
                    ""id"": ""9db4bef2-e626-4859-a952-43e43bff360b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click_Right"",
                    ""type"": ""Button"",
                    ""id"": ""af8f6a16-d319-4104-97ba-441a1661e589"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""241ee1d0-20a1-474d-b0df-c57690866815"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Close_Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad4fe822-8849-4c78-b80b-125b91d03e37"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Next_Page"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f3a953c-2c56-4508-afc9-e27a8ac1b11b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Previous_Page"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5705e696-9e4c-49d7-a184-2aaa573a2387"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Click_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""622e73d0-b5d4-4d3b-9ff1-134ca27af519"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";BM_PC"",
                    ""action"": ""Click_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""BM_PC"",
            ""bindingGroup"": ""BM_PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""BM_Gamepad"",
            ""bindingGroup"": ""BM_Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Gameplay
            m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
            m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
            m_Gameplay_Look = m_Gameplay.FindAction("Look", throwIfNotFound: true);
            m_Gameplay_Crouch = m_Gameplay.FindAction("Crouch", throwIfNotFound: true);
            m_Gameplay_Walk = m_Gameplay.FindAction("Walk", throwIfNotFound: true);
            m_Gameplay_CollectOrActivate = m_Gameplay.FindAction("CollectOrActivate", throwIfNotFound: true);
            m_Gameplay_Use = m_Gameplay.FindAction("Use", throwIfNotFound: true);
            m_Gameplay_ToggleDeveloperOverlay = m_Gameplay.FindAction("ToggleDeveloperOverlay", throwIfNotFound: true);
            m_Gameplay_Open_Inventory = m_Gameplay.FindAction("Open_Inventory", throwIfNotFound: true);
            // Gameplay_UI
            m_Gameplay_UI = asset.FindActionMap("Gameplay_UI", throwIfNotFound: true);
            m_Gameplay_UI_Close_Inventory = m_Gameplay_UI.FindAction("Close_Inventory", throwIfNotFound: true);
            m_Gameplay_UI_Next_Page = m_Gameplay_UI.FindAction("Next_Page", throwIfNotFound: true);
            m_Gameplay_UI_Previous_Page = m_Gameplay_UI.FindAction("Previous_Page", throwIfNotFound: true);
            m_Gameplay_UI_Click_Left = m_Gameplay_UI.FindAction("Click_Left", throwIfNotFound: true);
            m_Gameplay_UI_Click_Right = m_Gameplay_UI.FindAction("Click_Right", throwIfNotFound: true);
        }

        ~@IA_GameInputs()
        {
            UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, IA_GameInputs.Gameplay.Disable() has not been called.");
            UnityEngine.Debug.Assert(!m_Gameplay_UI.enabled, "This will cause a leak and performance issues, IA_GameInputs.Gameplay_UI.Disable() has not been called.");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Gameplay
        private readonly InputActionMap m_Gameplay;
        private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
        private readonly InputAction m_Gameplay_Move;
        private readonly InputAction m_Gameplay_Look;
        private readonly InputAction m_Gameplay_Crouch;
        private readonly InputAction m_Gameplay_Walk;
        private readonly InputAction m_Gameplay_CollectOrActivate;
        private readonly InputAction m_Gameplay_Use;
        private readonly InputAction m_Gameplay_ToggleDeveloperOverlay;
        private readonly InputAction m_Gameplay_Open_Inventory;
        public struct GameplayActions
        {
            private @IA_GameInputs m_Wrapper;
            public GameplayActions(@IA_GameInputs wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Gameplay_Move;
            public InputAction @Look => m_Wrapper.m_Gameplay_Look;
            public InputAction @Crouch => m_Wrapper.m_Gameplay_Crouch;
            public InputAction @Walk => m_Wrapper.m_Gameplay_Walk;
            public InputAction @CollectOrActivate => m_Wrapper.m_Gameplay_CollectOrActivate;
            public InputAction @Use => m_Wrapper.m_Gameplay_Use;
            public InputAction @ToggleDeveloperOverlay => m_Wrapper.m_Gameplay_ToggleDeveloperOverlay;
            public InputAction @Open_Inventory => m_Wrapper.m_Gameplay_Open_Inventory;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
            public void AddCallbacks(IGameplayActions instance)
            {
                if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @CollectOrActivate.started += instance.OnCollectOrActivate;
                @CollectOrActivate.performed += instance.OnCollectOrActivate;
                @CollectOrActivate.canceled += instance.OnCollectOrActivate;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
                @ToggleDeveloperOverlay.started += instance.OnToggleDeveloperOverlay;
                @ToggleDeveloperOverlay.performed += instance.OnToggleDeveloperOverlay;
                @ToggleDeveloperOverlay.canceled += instance.OnToggleDeveloperOverlay;
                @Open_Inventory.started += instance.OnOpen_Inventory;
                @Open_Inventory.performed += instance.OnOpen_Inventory;
                @Open_Inventory.canceled += instance.OnOpen_Inventory;
            }

            private void UnregisterCallbacks(IGameplayActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Look.started -= instance.OnLook;
                @Look.performed -= instance.OnLook;
                @Look.canceled -= instance.OnLook;
                @Crouch.started -= instance.OnCrouch;
                @Crouch.performed -= instance.OnCrouch;
                @Crouch.canceled -= instance.OnCrouch;
                @Walk.started -= instance.OnWalk;
                @Walk.performed -= instance.OnWalk;
                @Walk.canceled -= instance.OnWalk;
                @CollectOrActivate.started -= instance.OnCollectOrActivate;
                @CollectOrActivate.performed -= instance.OnCollectOrActivate;
                @CollectOrActivate.canceled -= instance.OnCollectOrActivate;
                @Use.started -= instance.OnUse;
                @Use.performed -= instance.OnUse;
                @Use.canceled -= instance.OnUse;
                @ToggleDeveloperOverlay.started -= instance.OnToggleDeveloperOverlay;
                @ToggleDeveloperOverlay.performed -= instance.OnToggleDeveloperOverlay;
                @ToggleDeveloperOverlay.canceled -= instance.OnToggleDeveloperOverlay;
                @Open_Inventory.started -= instance.OnOpen_Inventory;
                @Open_Inventory.performed -= instance.OnOpen_Inventory;
                @Open_Inventory.canceled -= instance.OnOpen_Inventory;
            }

            public void RemoveCallbacks(IGameplayActions instance)
            {
                if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGameplayActions instance)
            {
                foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GameplayActions @Gameplay => new GameplayActions(this);

        // Gameplay_UI
        private readonly InputActionMap m_Gameplay_UI;
        private List<IGameplay_UIActions> m_Gameplay_UIActionsCallbackInterfaces = new List<IGameplay_UIActions>();
        private readonly InputAction m_Gameplay_UI_Close_Inventory;
        private readonly InputAction m_Gameplay_UI_Next_Page;
        private readonly InputAction m_Gameplay_UI_Previous_Page;
        private readonly InputAction m_Gameplay_UI_Click_Left;
        private readonly InputAction m_Gameplay_UI_Click_Right;
        public struct Gameplay_UIActions
        {
            private @IA_GameInputs m_Wrapper;
            public Gameplay_UIActions(@IA_GameInputs wrapper) { m_Wrapper = wrapper; }
            public InputAction @Close_Inventory => m_Wrapper.m_Gameplay_UI_Close_Inventory;
            public InputAction @Next_Page => m_Wrapper.m_Gameplay_UI_Next_Page;
            public InputAction @Previous_Page => m_Wrapper.m_Gameplay_UI_Previous_Page;
            public InputAction @Click_Left => m_Wrapper.m_Gameplay_UI_Click_Left;
            public InputAction @Click_Right => m_Wrapper.m_Gameplay_UI_Click_Right;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay_UI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Gameplay_UIActions set) { return set.Get(); }
            public void AddCallbacks(IGameplay_UIActions instance)
            {
                if (instance == null || m_Wrapper.m_Gameplay_UIActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_Gameplay_UIActionsCallbackInterfaces.Add(instance);
                @Close_Inventory.started += instance.OnClose_Inventory;
                @Close_Inventory.performed += instance.OnClose_Inventory;
                @Close_Inventory.canceled += instance.OnClose_Inventory;
                @Next_Page.started += instance.OnNext_Page;
                @Next_Page.performed += instance.OnNext_Page;
                @Next_Page.canceled += instance.OnNext_Page;
                @Previous_Page.started += instance.OnPrevious_Page;
                @Previous_Page.performed += instance.OnPrevious_Page;
                @Previous_Page.canceled += instance.OnPrevious_Page;
                @Click_Left.started += instance.OnClick_Left;
                @Click_Left.performed += instance.OnClick_Left;
                @Click_Left.canceled += instance.OnClick_Left;
                @Click_Right.started += instance.OnClick_Right;
                @Click_Right.performed += instance.OnClick_Right;
                @Click_Right.canceled += instance.OnClick_Right;
            }

            private void UnregisterCallbacks(IGameplay_UIActions instance)
            {
                @Close_Inventory.started -= instance.OnClose_Inventory;
                @Close_Inventory.performed -= instance.OnClose_Inventory;
                @Close_Inventory.canceled -= instance.OnClose_Inventory;
                @Next_Page.started -= instance.OnNext_Page;
                @Next_Page.performed -= instance.OnNext_Page;
                @Next_Page.canceled -= instance.OnNext_Page;
                @Previous_Page.started -= instance.OnPrevious_Page;
                @Previous_Page.performed -= instance.OnPrevious_Page;
                @Previous_Page.canceled -= instance.OnPrevious_Page;
                @Click_Left.started -= instance.OnClick_Left;
                @Click_Left.performed -= instance.OnClick_Left;
                @Click_Left.canceled -= instance.OnClick_Left;
                @Click_Right.started -= instance.OnClick_Right;
                @Click_Right.performed -= instance.OnClick_Right;
                @Click_Right.canceled -= instance.OnClick_Right;
            }

            public void RemoveCallbacks(IGameplay_UIActions instance)
            {
                if (m_Wrapper.m_Gameplay_UIActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGameplay_UIActions instance)
            {
                foreach (var item in m_Wrapper.m_Gameplay_UIActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_Gameplay_UIActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public Gameplay_UIActions @Gameplay_UI => new Gameplay_UIActions(this);
        private int m_BM_PCSchemeIndex = -1;
        public InputControlScheme BM_PCScheme
        {
            get
            {
                if (m_BM_PCSchemeIndex == -1) m_BM_PCSchemeIndex = asset.FindControlSchemeIndex("BM_PC");
                return asset.controlSchemes[m_BM_PCSchemeIndex];
            }
        }
        private int m_BM_GamepadSchemeIndex = -1;
        public InputControlScheme BM_GamepadScheme
        {
            get
            {
                if (m_BM_GamepadSchemeIndex == -1) m_BM_GamepadSchemeIndex = asset.FindControlSchemeIndex("BM_Gamepad");
                return asset.controlSchemes[m_BM_GamepadSchemeIndex];
            }
        }
        public interface IGameplayActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnCrouch(InputAction.CallbackContext context);
            void OnWalk(InputAction.CallbackContext context);
            void OnCollectOrActivate(InputAction.CallbackContext context);
            void OnUse(InputAction.CallbackContext context);
            void OnToggleDeveloperOverlay(InputAction.CallbackContext context);
            void OnOpen_Inventory(InputAction.CallbackContext context);
        }
        public interface IGameplay_UIActions
        {
            void OnClose_Inventory(InputAction.CallbackContext context);
            void OnNext_Page(InputAction.CallbackContext context);
            void OnPrevious_Page(InputAction.CallbackContext context);
            void OnClick_Left(InputAction.CallbackContext context);
            void OnClick_Right(InputAction.CallbackContext context);
        }
    }
}
